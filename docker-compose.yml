version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: linkedin-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: linkedin_jobs
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - scraper-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: linkedin-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - scraper-network

  scraper:
    build: .
    container_name: linkedin-scraper
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=linkedin_jobs
      - PYTHONUNBUFFERED=1
      - LINKEDIN_EMAIL=${LINKEDIN_EMAIL}
      - LINKEDIN_PASSWORD=${LINKEDIN_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - scraper-network
    command: python -m app.main

networks:
  scraper-network:
    driver: bridge